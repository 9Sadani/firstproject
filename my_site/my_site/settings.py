"""
Django settings for my_site project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-i&@be1e=3e#+2tx_bso_%5@nfll89$(_!6wvk+jlwlke0(ly#v'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [

    'ckeditor',
    'ckeditor_uploader',
    'crispy_bootstrap4',
    'crispy_forms',
    'users.apps.UsersConfig',
    'blog.apps.BlogConfig',
    'games.apps.GamesConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'my_site.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'my_site.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'UTC    '

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_DIR = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [
   os.path.join(BASE_DIR, "static"),
]
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
CRISPY_TEMPLATE_PACK = 'bootstrap4'
LOGIN_REDIRECT_URL = 'blog-home'
LOGIN_URL = 'login'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
CKEDITOR_UPLOAD_PATH = "uploads/"

CKEDITOR_CONFIGS = {
    'default': {  # Определяет конфигурацию редактора с именем 'default'.
        'skin': 'moono',  # Устанавливает тему оформления (скин) редактора. Здесь используется "moono".
        # 'skin': 'office2013',  # Комментарий с альтернативной темой оформления "office2013".

        'toolbar_Basic': [  # Конфигурирует базовую панель инструментов.
            ['Source', '-', 'Bold', 'Italic']
            # Включает кнопки для кода ('Source'), жирного текста ('Bold'), и курсивного ('Italic').
        ],

        'toolbar_YourCustomToolbarConfig': [
            # Кастомизированная панель инструментов с набором кнопок и их группировкой.


            {'name': 'clipboard', 'items': ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo']},
            # Группа 'clipboard' содержит команды для работы с буфером обмена, такие как вырезание, копирование и вставка текста.

            {'name': 'forms',
             'items': ['Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton',
                       'HiddenField']},
            # Группа 'forms' добавляет элементы управления формами: чекбоксы, радио-кнопки, текстовые поля и кнопки.

            '/',  # Эта линия разделяет панели инструментов, создавая новую строку на панели.

            {'name': 'basicstyles',
             'items': ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat']},
            # Группа 'basicstyles' добавляет основные стили текста, такие как полужирный, курсив, подчеркивание и зачёркивание.

            {'name': 'paragraph',
             'items': ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv', '-',
                       'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl']},
            # Группа 'paragraph' добавляет кнопки для форматирования абзацев: списки, отступы, цитаты и выравнивание текста.

            {'name': 'links', 'items': ['Link', 'Unlink', 'Anchor']},
            # Группа 'links' содержит инструменты для работы с гиперссылками.

            {'name': 'insert',
             'items': ['Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe']},
            # Группа 'insert' добавляет кнопки для вставки изображений, таблиц, специальных символов, и Iframe.

            '/',  # Перенос панели инструментов на новую строку.

            {'name': 'styles', 'items': ['Styles', 'Format', 'Font', 'FontSize']},
            # Группа 'styles' предоставляет стили для текста, такие как шрифты и их размер.

            {'name': 'colors', 'items': ['TextColor', 'BGColor']},
            # Группа 'colors' добавляет выбор цветов текста и фона.

            {'name': 'yourcustomtools', 'items': ['Preview', 'Maximize']},
            # Кастомная группа 'yourcustomtools' добавляет кнопки предпросмотра и максимизации окна.
        ],

        'toolbar': 'YourCustomToolbarConfig',  # Устанавливает кастомизированную панель инструментов как активную.

        # 'toolbarGroups': [{ 'name': 'document', 'groups': [ 'mode', 'document', 'doctools' ] }],
        # Альтернативный способ группировки кнопок для панели инструментов.

        # 'height': 291,  # Определяет высоту редактора
        # 'width': '100%',  # Задает ширину редактора

        # 'filebrowserWindowHeight': 725,  # Высота окна загрузчика файлов.
        # 'filebrowserWindowWidth': 940,  # Ширина окна загрузчика файлов.

        # 'toolbarCanCollapse': True,  # Позволяет сворачивать панель инструментов (закомментировано).

        # 'mathJaxLib': '//cdn.mathjax.org/mathjax/2.2-latest/MathJax.js?config=TeX-AMS_HTML',
        # Подключает библиотеку MathJax для отображения математических формул.

        'tabSpaces': 4,  # Устанавливает количество пробелов для табуляции.

        'extraPlugins': ','.join([
            'uploadimage',  # Плагин для загрузки изображений.
            # Дополнительные плагины для редактора:
            'div',
            'autolink',  # Автоматически преобразует URL в ссылки.
            'autoembed',  # Автоматически встраивает мультимедиа.
            'embedsemantic',  # Семантическое встраивание мультимедиа.
            'autogrow',  # Плагин для автоматического изменения высоты редактора.
            # 'devtools',  # Плагин для инструментов разработчика (закомментирован).
            'widget',  # Поддержка виджетов.
            'lineutils',  # Утилиты для работы с линиями.
            'clipboard',  # Управляет буфером обмена.
            'dialog',  # Обеспечивает поддержку диалогов.
            'dialogui',  # Интерфейс для создания диалогов.
            'elementspath'  # Отображает путь к элементу.
        ]),
    }
}

# STATIC_ROOT = os.path.join(BASE_DIR, 'static')
